""" Initial migration for 2020 schema

Revision ID: 1986c1c89718
Revises:
Create Date: 2020-03-24 14:12:50.529777

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1986c1c89718'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pipeline',
    sa.Column('pipeline_id', sa.Integer(), nullable=False),
    sa.Column('pipeline_name', sa.String(length=50), nullable=False),
    sa.Column('pipeline_version', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('pipeline_id'),
    sa.UniqueConstraint('pipeline_name', 'pipeline_version')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=30), nullable=False),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('analysis',
    sa.Column('analysis_id', sa.Integer(), nullable=False),
    sa.Column('analysis_state', sa.Enum('Requested', 'Running', 'Done', 'Error', name='analysisstate'), nullable=False),
    sa.Column('pipeline_id', sa.Integer(), nullable=False),
    sa.Column('qsub_id', sa.Integer(), nullable=True),
    sa.Column('result_hpf_path', sa.String(length=500), nullable=True),
    sa.Column('assignee', sa.Integer(), nullable=False),
    sa.Column('requester', sa.Integer(), nullable=False),
    sa.Column('requested', sa.DateTime(), nullable=False),
    sa.Column('started', sa.DateTime(), nullable=True),
    sa.Column('finished', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assignee'], ['user.user_id'], onupdate='cascade'),
    sa.ForeignKeyConstraint(['pipeline_id'], ['pipeline.pipeline_id'], onupdate='cascade', ondelete='restrict'),
    sa.ForeignKeyConstraint(['requester'], ['user.user_id'], onupdate='cascade'),
    sa.ForeignKeyConstraint(['updated_by'], ['user.user_id'], onupdate='cascade'),
    sa.PrimaryKeyConstraint('analysis_id')
    )
    op.create_table('dataset',
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('dataset_type', sa.Enum('CES', 'CGS', 'CPS', 'RES', 'RGS', 'RLM', 'RMM', 'RRS', 'RTA', 'WES', 'RNASeq', 'RCS', 'RDC', 'RDE', name='datasettype'), nullable=False),
    sa.Column('input_hpf_path', sa.String(length=500), nullable=False),
    sa.Column('entered', sa.DateTime(), nullable=False),
    sa.Column('entered_by', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('condition', sa.Enum('Control', 'GermLine', 'Somatic', name='datasetcondition'), nullable=False),
    sa.Column('extraction_protocol', sa.Enum('Something', name='datasetextractionprotocol'), nullable=False),
    sa.Column('capture_kit', sa.String(length=50), nullable=True),
    sa.Column('library_prep_method', sa.String(length=50), nullable=True),
    sa.Column('library_prep_date', sa.Date(), nullable=True),
    sa.Column('read_length', sa.Integer(), nullable=True),
    sa.Column('read_type', sa.Enum('PairedEnd', 'SingleEnd', name='datasetreadtype'), nullable=True),
    sa.Column('sequencing_id', sa.String(length=50), nullable=True),
    sa.Column('sequencing_date', sa.Date(), nullable=True),
    sa.Column('sequencing_centre', sa.String(length=100), nullable=False),
    sa.Column('batch_id', sa.String(length=50), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.Column('discriminator', sa.Enum('Dataset', 'RNASeqDataset', name='datasetdiscriminator'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.user_id'], onupdate='cascade'),
    sa.ForeignKeyConstraint(['entered_by'], ['user.user_id'], onupdate='cascade'),
    sa.ForeignKeyConstraint(['updated_by'], ['user.user_id'], onupdate='cascade'),
    sa.PrimaryKeyConstraint('dataset_id')
    )
    op.create_table('family',
    sa.Column('family_id', sa.Integer(), nullable=False),
    sa.Column('family_codename', sa.String(length=50), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.user_id'], onupdate='cascade'),
    sa.ForeignKeyConstraint(['updated_by'], ['user.user_id'], onupdate='cascade'),
    sa.PrimaryKeyConstraint('family_id'),
    sa.UniqueConstraint('family_codename')
    )
    op.create_table('participant',
    sa.Column('participant_id', sa.Integer(), nullable=False),
    sa.Column('participant_codename', sa.String(length=50), nullable=False),
    sa.Column('sex', sa.Enum('Male', 'Female', 'Other', name='sex'), nullable=False),
    sa.Column('participant_type', sa.Enum('Proband', 'Parent', 'Sibling', name='participanttype'), nullable=False),
    sa.Column('affected', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.user_id'], onupdate='cascade'),
    sa.ForeignKeyConstraint(['updated_by'], ['user.user_id'], onupdate='cascade'),
    sa.PrimaryKeyConstraint('participant_id'),
    sa.UniqueConstraint('participant_codename')
    )
    op.create_table('pipeline_datasets',
    sa.Column('pipeline_id', sa.Integer(), nullable=False),
    sa.Column('supported_dataset', sa.Enum('CES', 'CGS', 'CPS', 'RES', 'RGS', 'RLM', 'RMM', 'RRS', 'RTA', 'WES', 'RNASeq', 'RCS', 'RDC', 'RDE', name='datasettype'), nullable=False),
    sa.ForeignKeyConstraint(['pipeline_id'], ['pipeline.pipeline_id'], onupdate='cascade', ondelete='restrict'),
    sa.PrimaryKeyConstraint('pipeline_id', 'supported_dataset')
    )
    op.create_table('tissue_sample',
    sa.Column('tissue_sample_id', sa.Integer(), nullable=False),
    sa.Column('extraction_date', sa.Date(), nullable=True),
    sa.Column('tissue_sample_type', sa.Enum('Blood', 'Saliva', 'Lymphocyte', 'Fibroblast', 'Muscle', 'Skin', 'Urine', 'Plasma', 'Unknown', 'Kidney', name='tissuesampletype'), nullable=False),
    sa.Column('tissue_processing', sa.Enum('FreshFrozen', 'Formaldehyde', name='tissueprocessing'), nullable=True),
    sa.Column('solved', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.user_id'], onupdate='cascade'),
    sa.ForeignKeyConstraint(['updated_by'], ['user.user_id'], onupdate='cascade'),
    sa.PrimaryKeyConstraint('tissue_sample_id')
    )
    op.create_table('association',
    sa.Column('dataset_id', sa.Integer(), nullable=True),
    sa.Column('analysis_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analysis.analysis_id'], ),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.dataset_id'], )
    )
    op.create_table('rnaseq_dataset',
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('RIN', sa.Float(), nullable=True),
    sa.Column('DV200', sa.Integer(), nullable=True),
    sa.Column('concentration', sa.Float(), nullable=True),
    sa.Column('sequencer', sa.String(length=50), nullable=True),
    sa.Column('spike_in', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['dataset.dataset_id'], onupdate='cascade', ondelete='cascade'),
    sa.PrimaryKeyConstraint('dataset_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rnaseq_dataset')
    op.drop_table('association')
    op.drop_table('tissue_sample')
    op.drop_table('pipeline_datasets')
    op.drop_table('participant')
    op.drop_table('family')
    op.drop_table('dataset')
    op.drop_table('analysis')
    op.drop_table('user')
    op.drop_table('pipeline')
    # ### end Alembic commands ###
