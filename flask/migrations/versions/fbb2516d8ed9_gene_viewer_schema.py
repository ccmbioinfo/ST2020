"""gene viewer schema

Revision ID: fbb2516d8ed9
Revises: 2a2bc309568d
Create Date: 2021-04-01 13:11:43.460048

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "fbb2516d8ed9"
down_revision = "2a2bc309568d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "gene",
        sa.Column("gene_id", sa.Integer(), nullable=False),
        sa.Column("hgnc_gene_id", sa.Integer(), nullable=True),
        sa.Column("ensembl_id", sa.Integer(), nullable=True),
        sa.Column("gene", sa.String(length=50), nullable=True),
        sa.Column("hgnc_gene_name", sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint("gene_id"),
        sa.UniqueConstraint("hgnc_gene_id"),
    )
    op.create_table(
        "variant",
        sa.Column("variant_id", sa.Integer(), nullable=False),
        sa.Column("analysis_id", sa.Integer(), nullable=False),
        sa.Column("position", sa.String(length=20), nullable=False),
        sa.Column("reference_allele", sa.String(length=150), nullable=False),
        sa.Column("alt_allele", sa.String(length=150), nullable=False),
        sa.Column(
            "variation",
            sa.Enum(
                "Missense_Variant",
                "Splice_Region_Variant",
                "Intergenic_Variant",
                "Intron_Variant",
                "Frameshift_Variant",
                "Upstream_Gene_Variant",
                "Inframe_Deletion",
                "Stop_Gained",
                "Inframe_Insertion",
                "Downstream_Gene_Variant",
                "Synonymous_Variant",
                "Non_Coding_Transcript_Exon_Variant",
                "Splice_Acceptor_Variant",
                "Splice_Donor_Variant",
                "Three_prime_UTR_Variant",
                "Five_prime_UTR_Variant",
                "Regultory_Region_Variant",
                "Stop_Lost",
                "Start_lost",
                "Protein_Altering_Variant",
                "Start_Retained_Variant",
                "Mature_miRNA_Variant",
                name="variation",
            ),
            nullable=False,
        ),
        sa.Column("refseq_change", sa.String(length=250), nullable=True),
        sa.Column("depth", sa.Integer(), nullable=False),
        sa.Column("gene_id", sa.Integer(), nullable=True),
        sa.Column("conserved_in_20_mammals", sa.Float(), nullable=True),
        sa.Column("sift_score", sa.Float(), nullable=True),
        sa.Column("polyphen_score", sa.Float(), nullable=True),
        sa.Column("cadd_score", sa.Float(), nullable=True),
        sa.Column("gnomad_af", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["analysis_id"],
            ["analysis.analysis_id"],
        ),
        sa.ForeignKeyConstraint(
            ["gene_id"], ["gene.gene_id"], onupdate="cascade", ondelete="restrict"
        ),
        sa.PrimaryKeyConstraint("variant_id"),
        sa.UniqueConstraint("variant_id", "analysis_id"),
    )
    op.create_table(
        "genotype",
        sa.Column("variant_id", sa.Integer(), nullable=False),
        sa.Column("analysis_id", sa.Integer(), nullable=False),
        sa.Column("dataset_id", sa.Integer(), nullable=False),
        sa.Column("zygosity", sa.String(length=50), nullable=True),
        sa.Column("burden", sa.Integer(), nullable=True),
        sa.Column("alt_depths", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["analysis_id"],
            ["analysis.analysis_id"],
        ),
        sa.ForeignKeyConstraint(
            ["dataset_id"],
            ["dataset.dataset_id"],
        ),
        sa.ForeignKeyConstraint(
            ["variant_id"],
            ["variant.variant_id"],
        ),
        sa.PrimaryKeyConstraint("variant_id", "analysis_id", "dataset_id"),
        sa.UniqueConstraint("variant_id", "analysis_id", "dataset_id"),
    )
    op.create_unique_constraint(
        "datasets_analyses_composite_fk",
        "datasets_analyses",
        ["dataset_id", "analysis_id"],
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("datasets_analyses_composite_fk", "datasets_analyses")
    op.drop_table("genotype")
    op.drop_table("variant")
    op.drop_table("gene")
    # ### end Alembic commands ###
