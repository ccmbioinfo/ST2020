name: Build and test backend
on:
  push:
    branches:
      - master
    paths:
      - .github/workflows/flask.yml
      - flask/**/*
      - Dockerfile
      - docker-compose*.yaml
  pull_request:
    branches:
      - '*'
    paths:
      - .github/workflows/flask.yml
      - flask/**/*
      - Dockerfile
      - docker-compose*.yaml
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      COMPOSE_FILE: docker-compose.test.yaml
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}
      - name: Build development image
        uses: docker/build-push-action@v2
        with:
          tags: ghcr.io/ccmbioinfo/stager:dev
          context: flask
          pull: true
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
      - name: Push development image
        if: ${{ github.event_name == 'push' }}
        run: docker push ghcr.io/ccmbioinfo/stager:dev
      - run: cp sample.env .env
      - name: Check version
        run: |
          docker-compose up -d mysql minio
          docker-compose exec -T minio minio --version
      - name: Pytest
        run: docker-compose run --rm app
      - name: Black
        run: docker-compose run --rm app black --check
      - name: Stop services
        run: docker-compose down
      - name: Infer production image tag
        id: infer
        if: github.event_name == 'push'
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Use Docker `latest` tag convention
          [[ "$VERSION" == "master" ]] && VERSION=latest
          echo "::set-output name=tag::$VERSION"
      - name: Build and push production image
        uses: docker/build-push-action@v2
        with:
          tags: ghcr.io/ccmbioinfo/stager:${{ steps.infer.outputs.tag || 'latest' }}
          context: flask
          file: "{context}/../Dockerfile"
          pull: true
          push: ${{ github.event_name == 'push' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
