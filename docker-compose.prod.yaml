version: "3.8"

services:
  mysql:
    image: mysql:8.0
    user: "${MYSQL_USER:-mysql}"
    restart: on-failure
    environment:
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    volumes:
      - ${MYSQL_VOLUME}:/var/lib/mysql
  minio:
    image: minio/minio
    user: "${MINIO_UIDGID}"
    restart: on-failure
    environment:
      MINIO_ACCESS_KEY: "${MINIO_ACCESS_KEY}"
      MINIO_SECRET_KEY: "${MINIO_SECRET_KEY}"
    volumes:
      - ${MINIO_VOLUME}:/data
    command: server /data
  app:
    build:
      context: flask
      dockerfile: ../Dockerfile
    image: "ghcr.io/ccmbioinfo/stager:${STAGER_VERSION:-latest}"
    user: "${FLASK_UIDGID:-www-data}"
    restart: on-failure
    environment:
      FLASK_ENV: production
      ST_DATABASE_URI: "mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql/${MYSQL_DATABASE}"
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: "${MINIO_ACCESS_KEY}"
      MINIO_SECRET_KEY: "${MINIO_SECRET_KEY}"
    depends_on:
      - mysql
      - minio
  nginx:
    image: nginx:alpine
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
      - "9000:9000"
    volumes:
      - ./react/build:/var/www/stager
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
#     - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
      - minio
    command: nginx -g "daemon off;"
